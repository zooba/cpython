steps:
- checkout: self
  clean: true
  fetchDepth: 5

- ${{ if ne(parameters.targetBranch, '') }}:
  - script: |
     git fetch -q origin ${{ parameters.targetbranch }}
     if ! git diff --name-only HEAD $(git merge-base HEAD FETCH_HEAD) | grep -qvE '(\.rst$|^Doc|^Misc)'
     then
       echo "Only docs were updated, stopping build process."
       echo "##vso[task.setvariable variable=DocOnly]true"
       exit
     fi
    displayName: Detect doc-only changes

- script: ./configure --with-pydebug
  displayName: 'Configure CPython (debug)'
  condition: and(succeeded(), ne(variables['DocOnly'], 'true'))

- script: make -s -j4
  displayName: 'Build CPython'
  condition: and(succeeded(), ne(variables['DocOnly'], 'true'))

- script: make pythoninfo
  displayName: 'Display build info'
  condition: and(succeeded(), ne(variables['DocOnly'], 'true'))

- script: make buildbottest TESTOPTS="-j4 -uall,-cpu --junit-xml=$(build.binariesDirectory)/test-results.xml"
  displayName: 'Tests'
  condition: and(succeeded(), ne(variables['DocOnly'], 'true'))

- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFiles: '$(build.binariesDirectory)/test-results.xml'
    mergeTestResults: true
    testRunTitle: $(testRunTitle)
    platform: $(testRunPlatform)
  condition: and(succeededOrFailed(), ne(variables['DocOnly'], 'true'))
