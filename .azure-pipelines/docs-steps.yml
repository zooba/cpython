parameters:
  latex: false
  upload: false

steps:
- checkout: self
  clean: true
  fetchDepth: 5

- script: |
   git fetch -q origin $(system.pullRequest.targetBranch)
   if ! git diff --name-only HEAD $(git merge-base HEAD FETCH_HEAD) | grep -qE '(\.rst$|^Doc|^Misc)'
   then
     echo "No docs were updated, stopping build process."
     echo "##vso[task.setvariable variable=NoDocs]true"
     exit
   fi
  displayName: Detect doc-only changes
  condition: and(succeeded(), variables['system.pullRequest.targetBranch'])

- task: UsePythonVersion@0
  displayName: 'Use Python 3.6 or later'
  inputs:
    versionSpec: '>=3.6'
  condition: and(succeeded(), ne(variables['NoDocs'], 'true'))

- script: python -m pip install sphinx~=1.6.1 blurb python-docs-theme
  displayName: 'Install build dependencies'
  condition: and(succeeded(), ne(variables['NoDocs'], 'true'))

- ${{ if ne(parameters.latex, 'true') }}:
  - script: make check suspicious html PYTHON=python
    workingDirectory: '$(build.sourcesDirectory)/Doc'
    displayName: 'Build documentation'
    condition: and(succeeded(), ne(variables['NoDocs'], 'true'))

- ${{ if eq(parameters.latex, 'true') }}:
  - script: sudo apt-get update && sudo apt-get install -qy --force-yes texlive-full 
    displayName: 'Install LaTeX'
    condition: and(succeeded(), ne(variables['NoDocs'], 'true'))

  - script: make dist PYTHON=python SPHINXBUILD='python -m sphinx' BLURB='python -m blurb'
    workingDirectory: '$(build.sourcesDirectory)/Doc'
    displayName: 'Build documentation'
    condition: and(succeeded(), ne(variables['NoDocs'], 'true'))

- ${{ if eq(parameters.upload, 'true') }}:
  - task: PublishBuildArtifacts@1
    displayName: 'Publish docs'
    condition: and(succeeded(), ne(variables['NoDocs'], 'true'))
    inputs:
      PathToPublish: '$(build.sourcesDirectory)/Doc/build'
      ArtifactName: build
      publishLocation: Container

  - ${{ if eq(parameters.latex, 'true') }}:
    - task: PublishBuildArtifacts@1
      displayName: 'Publish dist'
      inputs:
        PathToPublish: '$(build.sourcesDirectory)/Doc/dist'
        ArtifactName: dist
        publishLocation: Container
